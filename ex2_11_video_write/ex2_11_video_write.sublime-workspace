{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"logpol",
				"logpolar_frame"
			],
			[
				"img_",
				"img_cny"
			],
			[
				"img",
				"img_gry"
			],
			[
				"exam",
				"example2_5-out"
			],
			[
				"exa",
				"example2_5-out"
			],
			[
				"examp",
				"example2_5-in"
			],
			[
				"CAP_PR",
				"CAP_PROP_POS_FRAMES"
			],
			[
				"g_",
				"g_dontest"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/CMakeLists.txt",
			"settings":
			{
				"buffer_size": 162,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#include <opencv2/opencv.hpp>\n#include <iostream>\n\nint main(int argc, char **argv)\n{\n\tcv::namedWindow(\"Exampe2_11\", cv::WINDOW_AUTOSIZE);\n\tcv::namedWindow(\"Log_Polar\", cv::WINDOW_AUTOSIZE);\n\n\tcv::VideoCapture capture(argv[1]);\n\n\tdouble fps = capture.get(cv::CAP_PROP_FPS);\n\tcv::Size size(\n\t\t(int)capture.get(cv::CAP_PROP_FRAME_WIDTH), \n\t\t(int)capture.get(cv::CAP_PROP_FRAME_HEIGHT)\n\t\t);\n\n\tcv::VideoWriter writer;\n\twriter.open(argv[2], CV_FOURCC('M','J','P','G'), fps, size);\n\n\tcv::Mat logpolar_frame, bgr_frame;\n\tfor(;;)\n\t{\n\t\tcapture >> bgr_frame;\n\t\tif(bgr_frame.empty()) break;\n\n\t\tcv::imshow(\"Exampe2_11\", bgr_frame);\n\n\t\tcv::logPolar(\n\t\t\tbgr_frame,//input frame\n\t\t\tlogpolar_frame,//output frame\n\t\t\tcv::Point2f(\n\t\t\t\tbgr_frame.cols/2,//x\n\t\t\t\tbgr_frame.rows/2//y\n\t\t\t\t),\n\t\t\t40,//size\n\t\t\tcv::WARP_FILL_OUTLIERS//fill blank with 0\n\t\t\t);\n\n\t\tcv::imshow(\"Log_Polar\", logpolar_frame);\n\t\twriter << logpolar_frame;\n\n\t\tchar c = cv::waitKey(10);\n\t\tif(c == 27) break;\n\t}\n\n\tcapture.release();\n}",
			"file": "src/main.cpp",
			"file_size": 979,
			"file_write_time": 131860597842036545,
			"settings":
			{
				"buffer_size": 979,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "ex2_11_video_write (Linux)",
	"build_system_choices":
	[
		[
			[
				[
					"ex2_11_video_write (Linux)",
					""
				],
				[
					"ex2_11_video_write (Linux)",
					"clean"
				],
				[
					"ex2_11_video_write (Linux)",
					"rebuild_cache"
				],
				[
					"ex2_11_video_write (Linux)",
					"ex2_11_video_write"
				]
			],
			[
				"ex2_11_video_write (Linux)",
				"ex2_11_video_write"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 178.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/overclock/openCV/ex2_11_video_write",
		"/home/overclock/openCV/ex2_11_video_write/src"
	],
	"file_history":
	[
		"/home/overclock/openCV/ex2_11_video_write/src/CMakeLists.txt",
		"/home/overclock/openCV/ex2_6_downSampling/CMakeLists.txt",
		"/home/overclock/openCV/ex2_6_downSampling/src/CMakeLists.txt",
		"/home/overclock/openCV/ex2_5_video_bluring/src/main.cpp",
		"/home/overclock/openCV/ex2_1_Img/src/main.cpp",
		"/home/overclock/openCV/ex2_5_video_bluring/src/CMakeLists.txt",
		"/home/overclock/openCV/ex2_4_videoControl/src/CMakeLists.txt",
		"/home/overclock/openCV/ex2_4_videoControl/CMakeLists.txt",
		"/home/overclock/openCV/ex2_3_video/src/CMakeLists.txt",
		"/home/overclock/openCV/ex2_1_Img/src/CMakeLists.txt"
	],
	"find":
	{
		"height": 0.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 162,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 979,
						"regions":
						{
						},
						"selection":
						[
							[
								475,
								475
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 144.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "ex2_11_video_write (Linux)",
	"project": "ex2_11_video_write.sublime-project",
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 447.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
